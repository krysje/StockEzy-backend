// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockAPI.DBContext;

namespace StockAPI.Migrations
{
    [DbContext(typeof(StockAPIDBContext))]
    [Migration("20211218181210_changedBOD")]
    partial class changedBOD
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StockAPI.Entities.Company", b =>
                {
                    b.Property<string>("CompanyCode")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Company_Code");

                    b.Property<string>("BoardOfDirectors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brief")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ListedinStockExchanges")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SectorId")
                        .HasColumnType("bigint");

                    b.Property<float>("Turnover")
                        .HasColumnType("real");

                    b.HasKey("CompanyCode");

                    b.HasIndex("SectorId");

                    b.ToTable("company");
                });

            modelBuilder.Entity("StockAPI.Entities.IPODetails", b =>
                {
                    b.Property<long>("IPODetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("OpenDateTime")
                        .HasColumnType("int");

                    b.Property<float>("PricePerShare")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockExchange")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("TotalShares")
                        .HasColumnType("bigint");

                    b.HasKey("IPODetailsId");

                    b.HasIndex("CompanyCode");

                    b.HasIndex("StockExchange");

                    b.ToTable("ipo_details");
                });

            modelBuilder.Entity("StockAPI.Entities.Sector", b =>
                {
                    b.Property<long>("SectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brief")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectorName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("SectorId");

                    b.ToTable("sector");
                });

            modelBuilder.Entity("StockAPI.Entities.StockExchanges", b =>
                {
                    b.Property<string>("StockExchange")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Name");

                    b.Property<string>("Brief")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StockExchange");

                    b.ToTable("stock_exchange");
                });

            modelBuilder.Entity("StockAPI.Entities.StockPrice", b =>
                {
                    b.Property<string>("StockCode")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Stock_Code");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("CurrentPrice")
                        .HasColumnType("real");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("StockExchange")
                        .HasColumnType("nvarchar(450)");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("StockCode");

                    b.HasIndex("CompanyCode");

                    b.HasIndex("StockExchange");

                    b.ToTable("stock");
                });

            modelBuilder.Entity("StockAPI.Entities.Company", b =>
                {
                    b.HasOne("StockAPI.Entities.Sector", "Sector")
                        .WithMany()
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("StockAPI.Entities.IPODetails", b =>
                {
                    b.HasOne("StockAPI.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyCode");

                    b.HasOne("StockAPI.Entities.StockExchanges", "StockExchanges")
                        .WithMany()
                        .HasForeignKey("StockExchange");

                    b.Navigation("Company");

                    b.Navigation("StockExchanges");
                });

            modelBuilder.Entity("StockAPI.Entities.StockPrice", b =>
                {
                    b.HasOne("StockAPI.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyCode");

                    b.HasOne("StockAPI.Entities.StockExchanges", "StockExchanges")
                        .WithMany()
                        .HasForeignKey("StockExchange");

                    b.Navigation("Company");

                    b.Navigation("StockExchanges");
                });
#pragma warning restore 612, 618
        }
    }
}
